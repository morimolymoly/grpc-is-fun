// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/animal.proto

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AnimalType int32

const (
	AnimalType_DOG          AnimalType = 0
	AnimalType_CAT          AnimalType = 1
	AnimalType_HIPPOPOTAMUS AnimalType = 2
)

var AnimalType_name = map[int32]string{
	0: "DOG",
	1: "CAT",
	2: "HIPPOPOTAMUS",
}
var AnimalType_value = map[string]int32{
	"DOG":          0,
	"CAT":          1,
	"HIPPOPOTAMUS": 2,
}

func (x AnimalType) String() string {
	return proto.EnumName(AnimalType_name, int32(x))
}
func (AnimalType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_animal_d36cef307befdf7f, []int{0}
}

type GetAllAnimalsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAllAnimalsRequest) Reset()         { *m = GetAllAnimalsRequest{} }
func (m *GetAllAnimalsRequest) String() string { return proto.CompactTextString(m) }
func (*GetAllAnimalsRequest) ProtoMessage()    {}
func (*GetAllAnimalsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_animal_d36cef307befdf7f, []int{0}
}
func (m *GetAllAnimalsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllAnimalsRequest.Unmarshal(m, b)
}
func (m *GetAllAnimalsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllAnimalsRequest.Marshal(b, m, deterministic)
}
func (dst *GetAllAnimalsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllAnimalsRequest.Merge(dst, src)
}
func (m *GetAllAnimalsRequest) XXX_Size() int {
	return xxx_messageInfo_GetAllAnimalsRequest.Size(m)
}
func (m *GetAllAnimalsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllAnimalsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllAnimalsRequest proto.InternalMessageInfo

type GetAnimalRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAnimalRequest) Reset()         { *m = GetAnimalRequest{} }
func (m *GetAnimalRequest) String() string { return proto.CompactTextString(m) }
func (*GetAnimalRequest) ProtoMessage()    {}
func (*GetAnimalRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_animal_d36cef307befdf7f, []int{1}
}
func (m *GetAnimalRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAnimalRequest.Unmarshal(m, b)
}
func (m *GetAnimalRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAnimalRequest.Marshal(b, m, deterministic)
}
func (dst *GetAnimalRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAnimalRequest.Merge(dst, src)
}
func (m *GetAnimalRequest) XXX_Size() int {
	return xxx_messageInfo_GetAnimalRequest.Size(m)
}
func (m *GetAnimalRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAnimalRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAnimalRequest proto.InternalMessageInfo

func (m *GetAnimalRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetAnimalByIdRequest struct {
	ID                   int64    `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAnimalByIdRequest) Reset()         { *m = GetAnimalByIdRequest{} }
func (m *GetAnimalByIdRequest) String() string { return proto.CompactTextString(m) }
func (*GetAnimalByIdRequest) ProtoMessage()    {}
func (*GetAnimalByIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_animal_d36cef307befdf7f, []int{2}
}
func (m *GetAnimalByIdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAnimalByIdRequest.Unmarshal(m, b)
}
func (m *GetAnimalByIdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAnimalByIdRequest.Marshal(b, m, deterministic)
}
func (dst *GetAnimalByIdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAnimalByIdRequest.Merge(dst, src)
}
func (m *GetAnimalByIdRequest) XXX_Size() int {
	return xxx_messageInfo_GetAnimalByIdRequest.Size(m)
}
func (m *GetAnimalByIdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAnimalByIdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAnimalByIdRequest proto.InternalMessageInfo

func (m *GetAnimalByIdRequest) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

type Animal struct {
	ID                   int64    `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Nakigoe              string   `protobuf:"bytes,3,opt,name=Nakigoe,proto3" json:"Nakigoe,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Animal) Reset()         { *m = Animal{} }
func (m *Animal) String() string { return proto.CompactTextString(m) }
func (*Animal) ProtoMessage()    {}
func (*Animal) Descriptor() ([]byte, []int) {
	return fileDescriptor_animal_d36cef307befdf7f, []int{3}
}
func (m *Animal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Animal.Unmarshal(m, b)
}
func (m *Animal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Animal.Marshal(b, m, deterministic)
}
func (dst *Animal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Animal.Merge(dst, src)
}
func (m *Animal) XXX_Size() int {
	return xxx_messageInfo_Animal.Size(m)
}
func (m *Animal) XXX_DiscardUnknown() {
	xxx_messageInfo_Animal.DiscardUnknown(m)
}

var xxx_messageInfo_Animal proto.InternalMessageInfo

func (m *Animal) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *Animal) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Animal) GetNakigoe() string {
	if m != nil {
		return m.Nakigoe
	}
	return ""
}

type Animals struct {
	Animal               []*Animal `protobuf:"bytes,1,rep,name=animal,proto3" json:"animal,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Animals) Reset()         { *m = Animals{} }
func (m *Animals) String() string { return proto.CompactTextString(m) }
func (*Animals) ProtoMessage()    {}
func (*Animals) Descriptor() ([]byte, []int) {
	return fileDescriptor_animal_d36cef307befdf7f, []int{4}
}
func (m *Animals) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Animals.Unmarshal(m, b)
}
func (m *Animals) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Animals.Marshal(b, m, deterministic)
}
func (dst *Animals) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Animals.Merge(dst, src)
}
func (m *Animals) XXX_Size() int {
	return xxx_messageInfo_Animals.Size(m)
}
func (m *Animals) XXX_DiscardUnknown() {
	xxx_messageInfo_Animals.DiscardUnknown(m)
}

var xxx_messageInfo_Animals proto.InternalMessageInfo

func (m *Animals) GetAnimal() []*Animal {
	if m != nil {
		return m.Animal
	}
	return nil
}

func init() {
	proto.RegisterType((*GetAllAnimalsRequest)(nil), "api.GetAllAnimalsRequest")
	proto.RegisterType((*GetAnimalRequest)(nil), "api.GetAnimalRequest")
	proto.RegisterType((*GetAnimalByIdRequest)(nil), "api.GetAnimalByIdRequest")
	proto.RegisterType((*Animal)(nil), "api.Animal")
	proto.RegisterType((*Animals)(nil), "api.Animals")
	proto.RegisterEnum("api.AnimalType", AnimalType_name, AnimalType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AnimalServiceClient is the client API for AnimalService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AnimalServiceClient interface {
	GetAllAnimals(ctx context.Context, in *GetAllAnimalsRequest, opts ...grpc.CallOption) (*Animals, error)
	GetAnimal(ctx context.Context, in *GetAnimalRequest, opts ...grpc.CallOption) (*Animal, error)
	GetAnimalById(ctx context.Context, in *GetAnimalByIdRequest, opts ...grpc.CallOption) (*Animal, error)
}

type animalServiceClient struct {
	cc *grpc.ClientConn
}

func NewAnimalServiceClient(cc *grpc.ClientConn) AnimalServiceClient {
	return &animalServiceClient{cc}
}

func (c *animalServiceClient) GetAllAnimals(ctx context.Context, in *GetAllAnimalsRequest, opts ...grpc.CallOption) (*Animals, error) {
	out := new(Animals)
	err := c.cc.Invoke(ctx, "/api.AnimalService/GetAllAnimals", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *animalServiceClient) GetAnimal(ctx context.Context, in *GetAnimalRequest, opts ...grpc.CallOption) (*Animal, error) {
	out := new(Animal)
	err := c.cc.Invoke(ctx, "/api.AnimalService/GetAnimal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *animalServiceClient) GetAnimalById(ctx context.Context, in *GetAnimalByIdRequest, opts ...grpc.CallOption) (*Animal, error) {
	out := new(Animal)
	err := c.cc.Invoke(ctx, "/api.AnimalService/GetAnimalById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AnimalServiceServer is the server API for AnimalService service.
type AnimalServiceServer interface {
	GetAllAnimals(context.Context, *GetAllAnimalsRequest) (*Animals, error)
	GetAnimal(context.Context, *GetAnimalRequest) (*Animal, error)
	GetAnimalById(context.Context, *GetAnimalByIdRequest) (*Animal, error)
}

func RegisterAnimalServiceServer(s *grpc.Server, srv AnimalServiceServer) {
	s.RegisterService(&_AnimalService_serviceDesc, srv)
}

func _AnimalService_GetAllAnimals_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllAnimalsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnimalServiceServer).GetAllAnimals(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.AnimalService/GetAllAnimals",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnimalServiceServer).GetAllAnimals(ctx, req.(*GetAllAnimalsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AnimalService_GetAnimal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAnimalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnimalServiceServer).GetAnimal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.AnimalService/GetAnimal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnimalServiceServer).GetAnimal(ctx, req.(*GetAnimalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AnimalService_GetAnimalById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAnimalByIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnimalServiceServer).GetAnimalById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.AnimalService/GetAnimalById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnimalServiceServer).GetAnimalById(ctx, req.(*GetAnimalByIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AnimalService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.AnimalService",
	HandlerType: (*AnimalServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAllAnimals",
			Handler:    _AnimalService_GetAllAnimals_Handler,
		},
		{
			MethodName: "GetAnimal",
			Handler:    _AnimalService_GetAnimal_Handler,
		},
		{
			MethodName: "GetAnimalById",
			Handler:    _AnimalService_GetAnimalById_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/animal.proto",
}

func init() { proto.RegisterFile("api/animal.proto", fileDescriptor_animal_d36cef307befdf7f) }

var fileDescriptor_animal_d36cef307befdf7f = []byte{
	// 289 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x51, 0x4d, 0x4f, 0x83, 0x40,
	0x14, 0xe4, 0xc3, 0x40, 0xfa, 0xda, 0x9a, 0xcd, 0x8b, 0x1a, 0xec, 0xa9, 0x59, 0x93, 0xa6, 0xf1,
	0x80, 0x5a, 0x4f, 0x7a, 0x43, 0x89, 0x95, 0x83, 0x85, 0x50, 0xfc, 0x01, 0xab, 0x6e, 0xcc, 0x46,
	0x2a, 0x6b, 0x41, 0x93, 0xfe, 0x34, 0xff, 0x9d, 0xe9, 0x2e, 0x45, 0x24, 0xde, 0x1e, 0xf3, 0x66,
	0xde, 0x0c, 0xb3, 0x40, 0x98, 0x14, 0x67, 0xec, 0x5d, 0xac, 0x58, 0xee, 0xcb, 0x75, 0x51, 0x15,
	0x68, 0x33, 0x29, 0xe8, 0x11, 0x1c, 0xcc, 0x79, 0x15, 0xe4, 0x79, 0xa0, 0x56, 0x65, 0xca, 0x3f,
	0x3e, 0x79, 0x59, 0xd1, 0x09, 0x90, 0x2d, 0xae, 0xc0, 0x1a, 0x43, 0x84, 0xbd, 0x05, 0x5b, 0x71,
	0xcf, 0x1c, 0x9b, 0xd3, 0x5e, 0xaa, 0x66, 0x3a, 0xd1, 0x7a, 0xc5, 0xbb, 0xd9, 0x44, 0x2f, 0x3b,
	0xee, 0x3e, 0x58, 0x51, 0xa8, 0x98, 0x76, 0x6a, 0x45, 0x21, 0xbd, 0x03, 0x47, 0x93, 0xba, 0x9b,
	0xe6, 0xaa, 0xf5, 0x7b, 0x15, 0x3d, 0x70, 0x17, 0xec, 0x4d, 0xbc, 0x16, 0xdc, 0xb3, 0x15, 0xbc,
	0xfb, 0xa4, 0x3e, 0xb8, 0x75, 0x52, 0x3c, 0x01, 0x47, 0xff, 0x8f, 0x67, 0x8e, 0xed, 0x69, 0x7f,
	0xd6, 0xf7, 0x99, 0x14, 0x7e, 0x1d, 0xb9, 0x5e, 0x9d, 0x9e, 0x03, 0x68, 0x24, 0xdb, 0x48, 0x8e,
	0x2e, 0xd8, 0x61, 0x3c, 0x27, 0xc6, 0x76, 0xb8, 0x0d, 0x32, 0x62, 0x22, 0x81, 0xc1, 0x7d, 0x94,
	0x24, 0x71, 0x12, 0x67, 0xc1, 0xc3, 0xe3, 0x92, 0x58, 0xb3, 0x6f, 0x13, 0x86, 0x5a, 0xb2, 0xe4,
	0xeb, 0x2f, 0xf1, 0xcc, 0xf1, 0x1a, 0x86, 0x7f, 0x3a, 0xc2, 0x63, 0xe5, 0xf4, 0x5f, 0x6f, 0xa3,
	0x41, 0x2b, 0x44, 0x49, 0x0d, 0xbc, 0x80, 0x5e, 0xd3, 0x0f, 0x1e, 0x36, 0xba, 0x76, 0xaf, 0xa3,
	0x76, 0x70, 0x6a, 0xe0, 0x95, 0xb6, 0x6b, 0x2a, 0x6d, 0xd9, 0x75, 0x6b, 0xee, 0x48, 0x9f, 0x1c,
	0xf5, 0xb2, 0x97, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x4b, 0x17, 0xf4, 0x4d, 0xed, 0x01, 0x00,
	0x00,
}
